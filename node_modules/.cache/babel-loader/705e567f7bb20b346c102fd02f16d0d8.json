{"ast":null,"code":"import { API_URL } from \"../api\";\nconst initialState = {\n  data: {\n    count: 0\n  },\n  charactersAll: [],\n  charactersSelected: [],\n  startIndex: 0,\n  endIndex: 10,\n  lastPageNumber: 1,\n  nextUrl: `${API_URL}/people/?page=1`,\n  allCharactersFetched: false,\n  loading: false,\n  error: null\n};\nexport const FETCH_CHARACTERS_BEGIN = \"FETCH_CHARACTERS_BEGIN\";\nexport const FETCH_CHARACTERS_SUCCESS = \"FETCH_CHARACTERS_SUCCESS\";\nexport const FETCH_CHARACTERS_FAILURE = \"FETCH_CHARACTERS_FAILURE\";\n\nconst charactersReducer = (state = initialState, action) => {\n  let numberOfCharacters;\n  let endIndex;\n  let charactersToAddToSelected;\n\n  switch (action.type) {\n    case \"FETCH_CHARACTERS_BEGIN\":\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case \"FETCH_CHARACTERS_SUCCESS\":\n      numberOfCharacters = action.payload.numberOfCharacters;\n      endIndex = state.startIndex + numberOfCharacters;\n      charactersToAddToSelected = state.charactersAll.concat(action.payload.data.results).slice(state.startIndex, endIndex);\n      return { ...state,\n        loading: false,\n        data: action.payload.data,\n        charactersAll: [...state.charactersAll, ...action.payload.data.results],\n        charactersSelected: [...state.charactersSelected, ...charactersToAddToSelected],\n        nextUrl: action.payload.data.next,\n        lastPageNumber: Math.ceil(action.payload.data.count / 10),\n        startIndex: state.startIndex + numberOfCharacters,\n        endIndex: endIndex + numberOfCharacters\n      };\n\n    case \"FETCH_CHARACTERS_FAILURE\":\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        allCharactersFetched: state.startIndex > state.data.count\n      };\n\n    case \"GET_CHARACTERS\":\n      numberOfCharacters = action.payload.numberOfCharacters;\n      endIndex = state.startIndex + numberOfCharacters;\n      charactersToAddToSelected = state.charactersAll.slice(state.startIndex, state.endIndex);\n      return { ...state,\n        loading: false,\n        charactersSelected: [...state.charactersSelected, ...charactersToAddToSelected],\n        startIndex: state.startIndex + numberOfCharacters,\n        endIndex: endIndex + numberOfCharacters\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default charactersReducer;","map":{"version":3,"sources":["/Users/justiceirivwieri/Downloads/star-wars-characters-main/src/reducers/charactersReducer.ts"],"names":["API_URL","initialState","data","count","charactersAll","charactersSelected","startIndex","endIndex","lastPageNumber","nextUrl","allCharactersFetched","loading","error","FETCH_CHARACTERS_BEGIN","FETCH_CHARACTERS_SUCCESS","FETCH_CHARACTERS_FAILURE","charactersReducer","state","action","numberOfCharacters","charactersToAddToSelected","type","payload","concat","results","slice","next","Math","ceil"],"mappings":"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","sourcesContent":["import { API_URL } from \"../api\";\nimport { CharacterType } from \"../types\";\n\ninterface Data {\n  count: number;\n  next?: string | null;\n  previous?: string | null;\n  results?: Array<CharacterType>;\n}\n\ninterface CharactersState {\n  data: Data; //fetched data\n  charactersAll: Array<CharacterType>; //all characters which has been fetched so far\n  charactersSelected: Array<CharacterType>; //characters selected to be displayed\n  startIndex: number; //start index for selecting items to copy from charactersAll to charactersSelected\n  endIndex: number; //end index for selecting items to copy from charactersAll to charactersSelected\n  lastPageNumber: number; //number of last page in API\n  nextUrl: string;\n  allCharactersFetched: boolean;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: CharactersState = {\n  data: { count: 0 },\n  charactersAll: [],\n  charactersSelected: [],\n  startIndex: 0,\n  endIndex: 10,\n  lastPageNumber: 1,\n  nextUrl: `${API_URL}/people/?page=1`,\n  allCharactersFetched: false,\n  loading: false,\n  error: null,\n};\n\nexport const FETCH_CHARACTERS_BEGIN = \"FETCH_CHARACTERS_BEGIN\";\nexport const FETCH_CHARACTERS_SUCCESS = \"FETCH_CHARACTERS_SUCCESS\";\nexport const FETCH_CHARACTERS_FAILURE = \"FETCH_CHARACTERS_FAILURE\";\n\nconst charactersReducer = (state = initialState, action: any) => {\n  let numberOfCharacters: number;\n  let endIndex: number;\n  let charactersToAddToSelected;\n\n  switch (action.type) {\n    case \"FETCH_CHARACTERS_BEGIN\":\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case \"FETCH_CHARACTERS_SUCCESS\":\n      numberOfCharacters = action.payload.numberOfCharacters;\n      endIndex = state.startIndex + numberOfCharacters;\n      charactersToAddToSelected = state.charactersAll\n        .concat(action.payload.data.results)\n        .slice(state.startIndex, endIndex);\n\n        \n      return {\n        ...state,\n        loading: false,\n        data: action.payload.data,\n        charactersAll: [...state.charactersAll, ...action.payload.data.results],\n        charactersSelected: [\n          ...state.charactersSelected,\n          ...charactersToAddToSelected,\n        ],\n        nextUrl: action.payload.data.next,\n        lastPageNumber: Math.ceil(action.payload.data.count / 10),\n        startIndex: state.startIndex + numberOfCharacters,\n        endIndex: endIndex + numberOfCharacters,\n      };\n    case \"FETCH_CHARACTERS_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        allCharactersFetched: state.startIndex > state.data.count,\n      };\n    case \"GET_CHARACTERS\":\n      numberOfCharacters = action.payload.numberOfCharacters;\n      endIndex = state.startIndex + numberOfCharacters;\n      charactersToAddToSelected = state.charactersAll.slice(\n        state.startIndex,\n        state.endIndex\n      );\n\n      return {\n        ...state,\n        loading: false,\n        charactersSelected: [\n          ...state.charactersSelected,\n          ...charactersToAddToSelected,\n        ],\n        startIndex: state.startIndex + numberOfCharacters,\n        endIndex: endIndex + numberOfCharacters,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default charactersReducer;\n"]},"metadata":{},"sourceType":"module"}