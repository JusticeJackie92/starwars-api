{"ast":null,"code":"const initialState = {\n  films: [],\n  data: {},\n  loading: false,\n  error: null\n};\nexport const FETCH_FILMS_BEGIN = \"FETCH_FILMS_BEGIN\";\nexport const FETCH_FILMS_SUCCESS = \"FETCH_FILMS_SUCCESS\";\nexport const FETCH_FILMS_FAILURE = \"FETCH_FILMS_FAILURE\";\n\nconst filmsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_FILMS_BEGIN\":\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case \"FETCH_FILMS_SUCCESS\":\n      const mappedFilms = action.payload.films.results.map(film => {\n        return {\n          title: film[\"title\"],\n          url: film[\"url\"]\n        };\n      });\n      return { ...state,\n        loading: false,\n        data: action.payload.films,\n        films: mappedFilms\n      };\n\n    case \"FETCH_FILMS_FAILURE\":\n      return { ...state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filmsReducer;","map":{"version":3,"sources":["/Users/justiceirivwieri/Downloads/star-wars-characters-main/src/reducers/filmsReducer.ts"],"names":["initialState","films","data","loading","error","FETCH_FILMS_BEGIN","FETCH_FILMS_SUCCESS","FETCH_FILMS_FAILURE","filmsReducer","state","action","type","mappedFilms","payload","results","map","film","title","url"],"mappings":"AAgBA,MAAMA,YAAwB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,IAAI,EAAE,EAFyB;AAG/BC,EAAAA,OAAO,EAAE,KAHsB;AAI/BC,EAAAA,KAAK,EAAE;AAJwB,CAAjC;AAOA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAuC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELN,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,qBAAL;AACE,YAAMQ,WAAW,GAAGF,MAAM,CAACG,OAAP,CAAeZ,KAAf,CAAqBa,OAArB,CAA6BC,GAA7B,CAAkCC,IAAD,IAAe;AAClE,eAAO;AAAEC,UAAAA,KAAK,EAAED,IAAI,CAAC,OAAD,CAAb;AAAwBE,UAAAA,GAAG,EAAEF,IAAI,CAAC,KAAD;AAAjC,SAAP;AACD,OAFmB,CAApB;AAGA,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,IAAI,EAAEQ,MAAM,CAACG,OAAP,CAAeZ,KAHhB;AAILA,QAAAA,KAAK,EAAEW;AAJF,OAAP;;AAMF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT;AAHjB,OAAP;;AAKF;AACE,aAAOK,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,YAAf","sourcesContent":["import { Film, FilmShort } from \"../types\";\n\ninterface Data {\n  count?: number;\n  next?: string | null;\n  previous?: string | null;\n  results?: Array<Film>;\n}\n\ninterface FilmsState {\n  films: Array<FilmShort>;\n  data: Data;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: FilmsState = {\n  films: [],\n  data: {},\n  loading: false,\n  error: null,\n};\n\nexport const FETCH_FILMS_BEGIN = \"FETCH_FILMS_BEGIN\";\nexport const FETCH_FILMS_SUCCESS = \"FETCH_FILMS_SUCCESS\";\nexport const FETCH_FILMS_FAILURE = \"FETCH_FILMS_FAILURE\";\n\nconst filmsReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case \"FETCH_FILMS_BEGIN\":\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case \"FETCH_FILMS_SUCCESS\":\n      const mappedFilms = action.payload.films.results.map((film: any) => {\n        return { title: film[\"title\"], url: film[\"url\"] };\n      });\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.films,\n        films: mappedFilms,\n      };\n    case \"FETCH_FILMS_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filmsReducer;\n"]},"metadata":{},"sourceType":"module"}